{"ast":null,"code":"const sumArr = arr => {\n  return arr.reduce((res, num) => res + num, 0);\n};\n\nconst calcID = (arr, multipliers) => {\n  const multi = (num, i) => num * multipliers[i];\n\n  const sum = num => num > 9 ? num % 10 + 1 : num;\n\n  const res = sumArr(arr.map(multi).map(sum));\n  return res % 10 === 0 ? 0 : 10 - res % 10;\n};\n\nconst isEqual = (a, b) => {\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b).filter(key => !keysA.includes(key));\n\n  for (let i = 0; i < keysA.length; i++) {\n    const key = keysA[i];\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n\n    ;\n  }\n\n  for (let i = 0; i < keysB.length; i++) {\n    const key = keysB[i];\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n\n    ;\n  }\n\n  return true;\n};\n\nexport { calcID, isEqual };","map":{"version":3,"sources":["/Users/omer/Downloads/check-digit/src/utils/calculates.js"],"names":["sumArr","arr","reduce","res","num","calcID","multipliers","multi","i","sum","map","isEqual","a","b","keysA","Object","keys","keysB","filter","key","includes","length"],"mappings":"AAAA,MAAMA,MAAM,GAAIC,GAAD,IAAS;AACvB,SAAOA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAA/B,EAAoC,CAApC,CAAP;AACA,CAFD;;AAIA,MAAMC,MAAM,GAAG,CAACJ,GAAD,EAAMK,WAAN,KAAsB;AAEpC,QAAMC,KAAK,GAAG,CAACH,GAAD,EAAMI,CAAN,KAAYJ,GAAG,GAAGE,WAAW,CAACE,CAAD,CAA3C;;AACA,QAAMC,GAAG,GAAIL,GAAD,IAASA,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,EAAN,GAAW,CAArB,GAAyBA,GAA9C;;AAEA,QAAMD,GAAG,GAAGH,MAAM,CAAEC,GAAG,CAACS,GAAJ,CAAQH,KAAR,EAAeG,GAAf,CAAmBD,GAAnB,CAAF,CAAlB;AACA,SAAON,GAAG,GAAG,EAAN,KAAa,CAAb,GAAiB,CAAjB,GAAqB,KAAKA,GAAG,GAAG,EAAvC;AACA,CAPD;;AASA,MAAMQ,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,QAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAd;AACA,QAAMK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAeK,MAAf,CAAsBC,GAAG,IAAI,CAACL,KAAK,CAACM,QAAN,CAAeD,GAAf,CAA9B,CAAd;;AAEA,OAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,KAAK,CAACO,MAA1B,EAAkCb,CAAC,EAAnC,EAAuC;AACtC,UAAMW,GAAG,GAAGL,KAAK,CAACN,CAAD,CAAjB;;AACA,QAAII,CAAC,CAACO,GAAD,CAAD,KAAWN,CAAC,CAACM,GAAD,CAAhB,EAAuB;AACtB,aAAO,KAAP;AACA;;AAAA;AACD;;AAED,OAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,KAAK,CAACI,MAA1B,EAAkCb,CAAC,EAAnC,EAAuC;AACtC,UAAMW,GAAG,GAAGF,KAAK,CAACT,CAAD,CAAjB;;AACA,QAAII,CAAC,CAACO,GAAD,CAAD,KAAWN,CAAC,CAACM,GAAD,CAAhB,EAAuB;AACtB,aAAO,KAAP;AACA;;AAAA;AACD;;AAED,SAAO,IAAP;AACA,CAnBD;;AAqBA,SACCd,MADD,EAECM,OAFD","sourcesContent":["const sumArr = (arr) => {\n\treturn arr.reduce((res, num) => res + num, 0);\n}\n\nconst calcID = (arr, multipliers) => {\n\n\tconst multi = (num, i) => num * multipliers[i];\n\tconst sum = (num) => num > 9 ? num % 10 + 1 : num;\n\n\tconst res = sumArr( arr.map(multi).map(sum) );\n\treturn res % 10 === 0 ? 0 : 10 - res % 10;\n}\n\nconst isEqual = (a, b) => {\n\tconst keysA = Object.keys(a);\n\tconst keysB = Object.keys(b).filter(key => !keysA.includes(key));\n\n\tfor (let i = 0; i < keysA.length; i++) {\n\t\tconst key = keysA[i];\n\t\tif (a[key] !== b[key]) {\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tfor (let i = 0; i < keysB.length; i++) {\n\t\tconst key = keysB[i];\n\t\tif (a[key] !== b[key]) {\n\t\t\treturn false;\n\t\t};\n\t}\n\n\treturn true;\n}\n\nexport {\n\tcalcID,\n\tisEqual,\n};\n"]},"metadata":{},"sourceType":"module"}