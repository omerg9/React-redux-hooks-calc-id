{"ast":null,"code":"import _defineProperty from \"/Users/omer/Downloads/check-digit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { multipliers } from '../config';\nimport { calcID, isEqual } from '../utils/calculates';\nimport actions from './actions';\nimport { selectNums, selectIsAllFilled } from './selectors';\nlet cachedNums = {};\n\nconst onNumsUpdate = (state, dispatch) => {\n  const isAllFilled = selectIsAllFilled(state);\n\n  if (!isAllFilled) {\n    if (state.result) {\n      dispatch(actions.changeRes(''));\n    }\n\n    return;\n  }\n\n  ;\n  const nums = selectNums(state);\n\n  if (isEqual(nums, cachedNums)) {\n    return;\n  }\n\n  cachedNums = _objectSpread({}, nums);\n  const rawNums = Object.values(nums).map(num => Number(num)).filter(num => !Number.isNaN(num));\n  const result = rawNums.length === 8 ? calcID(rawNums, multipliers) : '';\n  dispatch(actions.changeRes(result));\n};\n\nexport { onNumsUpdate };","map":{"version":3,"sources":["/Users/omer/Downloads/check-digit/src/redux/subscribes.js"],"names":["multipliers","calcID","isEqual","actions","selectNums","selectIsAllFilled","cachedNums","onNumsUpdate","state","dispatch","isAllFilled","result","changeRes","nums","rawNums","Object","values","map","num","Number","filter","isNaN","length"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,qBAAhC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,aAA9C;AAEA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,QAAMC,WAAW,GAAGL,iBAAiB,CAACG,KAAD,CAArC;;AACA,MAAI,CAACE,WAAL,EAAkB;AACjB,QAAIF,KAAK,CAACG,MAAV,EAAkB;AACjBF,MAAAA,QAAQ,CAACN,OAAO,CAACS,SAAR,CAAkB,EAAlB,CAAD,CAAR;AACA;;AACD;AACA;;AAAA;AAED,QAAMC,IAAI,GAAGT,UAAU,CAACI,KAAD,CAAvB;;AACA,MAAIN,OAAO,CAACW,IAAD,EAAOP,UAAP,CAAX,EAA+B;AAC9B;AACA;;AAEDA,EAAAA,UAAU,qBAAQO,IAAR,CAAV;AAEA,QAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcH,IAAd,EACdI,GADc,CACVC,GAAG,IAAIC,MAAM,CAACD,GAAD,CADH,EAEdE,MAFc,CAEPF,GAAG,IAAI,CAACC,MAAM,CAACE,KAAP,CAAaH,GAAb,CAFD,CAAhB;AAIA,QAAMP,MAAM,GAAGG,OAAO,CAACQ,MAAR,KAAmB,CAAnB,GAAuBrB,MAAM,CAACa,OAAD,EAAUd,WAAV,CAA7B,GAAsD,EAArE;AAEAS,EAAAA,QAAQ,CAACN,OAAO,CAACS,SAAR,CAAkBD,MAAlB,CAAD,CAAR;AACA,CAvBD;;AAyBA,SACCJ,YADD","sourcesContent":["import { multipliers } from '../config';\nimport { calcID, isEqual } from '../utils/calculates';\n\nimport actions from './actions';\nimport { selectNums, selectIsAllFilled } from './selectors';\n\nlet cachedNums = {};\n\nconst onNumsUpdate = (state, dispatch) => {\n\tconst isAllFilled = selectIsAllFilled(state);\n\tif (!isAllFilled) {\n\t\tif (state.result) {\n\t\t\tdispatch(actions.changeRes(''));\n\t\t}\n\t\treturn;\n\t};\n\n\tconst nums = selectNums(state);\n\tif (isEqual(nums, cachedNums)) {\n\t\treturn;\n\t}\n\n\tcachedNums = { ...nums };\n\n\tconst rawNums = Object.values(nums)\n\t\t.map(num => Number(num))\n\t\t.filter(num => !Number.isNaN(num));\n\n\tconst result = rawNums.length === 8 ? calcID(rawNums, multipliers) : '';\n\n\tdispatch(actions.changeRes(result));\n};\n\nexport {\n\tonNumsUpdate,\n};\n"]},"metadata":{},"sourceType":"module"}